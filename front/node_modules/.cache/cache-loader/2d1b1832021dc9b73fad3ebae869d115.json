{"remainingRequest":"C:\\xampp\\htdocs\\photography\\node_modules\\thread-loader\\dist\\cjs.js!C:\\xampp\\htdocs\\photography\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\photography\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\photography\\src\\pages\\home\\login.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\xampp\\htdocs\\photography\\src\\pages\\home\\login.vue","mtime":1527089459094},{"path":"C:\\xampp\\htdocs\\photography\\package.json","mtime":1526886124924},{"path":"C:\\xampp\\htdocs\\photography\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1526485514234},{"path":"C:\\xampp\\htdocs\\photography\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1526485517278},{"path":"C:\\xampp\\htdocs\\photography\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\xampp\\htdocs\\photography\\node_modules\\vue-loader\\lib\\index.js","mtime":1526010763000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"C:\\\\xampp\\\\htdocs\\\\photography\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport { loginUrl, getHeader, userUrl } from '../../config';\nimport { clientId, clientSecret } from '../../env';\nexport default {\n  name: 'Login',\n  computed: _objectSpread({}, mapState({\n    userStore: function userStore(state) {\n      return state.userStore;\n    }\n  })),\n  data: function data() {\n    return {\n      email: '',\n      password: '',\n      error: '',\n      loading: '',\n      disabled: false\n    };\n  },\n  created: function created() {\n    if (this.userStore.email != null) {\n      this.email = this.userStore.email;\n    }\n\n    var userObj = JSON.parse(window.localStorage.getItem('authUser'));\n\n    if (userObj != null) {\n      this.$router.push({\n        path: '/dashboard'\n      });\n    }\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n\n      this.loading = true;\n      this.disabled = true;\n      var postData = {\n        grant_type: 'password',\n        client_id: clientId,\n        client_secret: clientSecret,\n        username: this.email,\n        password: this.password,\n        scope: '',\n        path: ''\n      };\n      var authUser = {};\n      axios.post(loginUrl, postData).then(function (response) {\n        _this.error = '';\n        _this.loading = false;\n        _this.disabled = false;\n\n        if (response.data.errors) {\n          _this.error = response.data.errors;\n        } else {\n          authUser.access_token = response.data.access_token;\n          authUser.refresh_token = response.data.refresh_token;\n          window.localStorage.setItem('authUser', JSON.stringify(authUser));\n          axios.get(userUrl, {\n            headers: getHeader()\n          }).then(function (response) {\n            _this.loading = false;\n            _this.disabled = false;\n            authUser.email = response.data.email;\n            authUser.id = response.data.id;\n            authUser.name = response.data.name;\n            window.localStorage.setItem('authUser', JSON.stringify(authUser));\n\n            _this.$store.dispatch('setuserobj', authUser);\n\n            _this.path = JSON.parse(window.localStorage.getItem('fromLink'));\n\n            if (_this.path == null) {\n              _this.$router.push({\n                name: 'dashboard'\n              });\n            } else {\n              _this.$router.push({\n                path: _this.path\n              });\n            }\n          });\n        }\n      }).catch(function (response) {\n        _this.loading = false;\n        _this.disabled = false;\n        _this.error = response.response.data.message;\n      });\n    }\n  }\n};",{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;QAEA;AACA;;mBAEA,AACA,AACA;;AAHA;wBAIA;;aAEA;gBACA;aACA;eACA;gBACA,AACA;AANA;AAOA;8BACA;sCACA;kCACA;AACA;;yDACA;;yBACA;;cACA;;AACA;AACA;;;AAGA;;qBACA;sBACA;;oBAEA;mBACA;uBACA;uBACA;uBACA;eACA;cACA,AACA;AARA;qBASA;2BACA,mCACA;sBACA;wBACA;yBACA;;kCACA;sCACA;eACA;gDACA;iDACA;iEACA;;qBACA;sCACA;4BACA;6BACA;2CACA;wCACA;0CACA;mEACA;;gDACA;;gEACA;;oCACA;;sBACA;;mBACA;;4BACA;;AACA;AACA;AACA;mCACA;wBACA;yBACA;6CACA;AACA;AACA,AACA;AAjDA;AAzBA","file":"login.vue","sourceRoot":"src\\pages\\home","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-5 col-sm-12 col-xs-12 offset-md-3\">\r\n          <div class=\"card fat\">\r\n            <div class=\"card-body\">\r\n              <h4 class=\"card-title\">Login</h4>\r\n              <form method=\"POST\" @submit.prevent=\"login\">\r\n\r\n                <div class=\"form-group\">\r\n                  <label for=\"email\">E-Mail Address</label>\r\n\r\n                  <input id=\"email\" type=\"email\" class=\"form-control\" name=\"email\" v-model=\"email\" value=\"\" required=\"\" autofocus=\"\">\r\n                </div>\r\n                <br>\r\n                <div class=\"form-group\">\r\n                  <label for=\"password\">Password\r\n                  </label>\r\n                  <div style=\"position:relative\">\r\n                    <input id=\"password\" type=\"password\" class=\"form-control\" name=\"password\" v-model=\"password\" required=\"\" data-eye=\"\" style=\"padding-right: 60px;\"><input type=\"hidden\" id=\"passeye-0\">\r\n                  </div>\r\n                </div>\r\n                <div v-show=\"error\" class=\"text-danger text-center pd-10\">\r\n                  {{ error }}\r\n                </div>\r\n                <div v-show=\"loading\" class=\"text-danger text-center pd-10\">\r\n                  <img src=\"../../assets/loader.gif\" alt=\"\" height=\"60\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <button type=\"submit\" class=\"btn btn-primary btn-block\" :disabled=\"disabled\">\r\n                    Login\r\n                  </button>\r\n                </div>\r\n                <div class=\"margin-top20 text-center\">\r\n                  Don't have an account? <router-link v-bind:to=\"'/register'\"> Create One</router-link>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapState} from 'vuex'\r\nimport { loginUrl, getHeader, userUrl } from '../../config'\r\nimport { clientId, clientSecret } from '../../env'\r\nexport default {\r\n  name: 'Login',\r\n  computed: {\r\n    ...mapState({\r\n      userStore: state => state.userStore\r\n    })\r\n  },\r\n  data () {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      error: '',\r\n      loading: '',\r\n      disabled: false\r\n    }\r\n  },\r\n  created(){\r\n    if(this.userStore.email != null){\r\n      this.email = this.userStore.email;\r\n    }\r\n    const userObj = JSON.parse(window.localStorage.getItem('authUser'))\r\n    if(userObj != null){\r\n     this.$router.push({ path: '/dashboard' })\r\n    }\r\n  },\r\n  methods:{\r\n    login: function(){\r\n\r\n      this.loading = true\r\n      this.disabled = true\r\n      const postData = {\r\n        grant_type: 'password',\r\n        client_id: clientId,\r\n        client_secret: clientSecret,\r\n        username: this.email,\r\n        password: this.password,\r\n        scope: '',\r\n        path: ''\r\n      }\r\n      const authUser = {};\r\n      axios.post(loginUrl, postData)\r\n        .then(response => {\r\n          this.error = ''\r\n          this.loading = false\r\n          this.disabled = false\r\n          if(response.data.errors){\r\n            this.error = response.data.errors\r\n          }else{\r\n            authUser.access_token = response.data.access_token\r\n            authUser.refresh_token = response.data.refresh_token\r\n            window.localStorage.setItem('authUser', JSON.stringify(authUser))\r\n            axios.get(userUrl, {headers: getHeader()})\r\n            .then(response => {\r\n              this.loading = false\r\n              this.disabled = false\r\n              authUser.email = response.data.email\r\n              authUser.id = response.data.id\r\n              authUser.name = response.data.name\r\n              window.localStorage.setItem('authUser', JSON.stringify(authUser))\r\n              this.$store.dispatch('setuserobj', authUser)\r\n              this.path = JSON.parse(window.localStorage.getItem('fromLink'));\r\n              if(this.path == null){\r\n                this.$router.push({ name : 'dashboard' })\r\n              }else{\r\n                this.$router.push({ path : this.path })\r\n              }\r\n            });\r\n          }\r\n        }).catch(response => {\r\n          this.loading = false\r\n          this.disabled = false\r\n          this.error = response.response.data.message;\r\n        });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n  label{\r\n    font-size: 15px;\r\n    color: #ccc;\r\n  }\r\n  .pd-10{\r\n    padding: 10px;\r\n  }\r\n</style>\r\n"]}]}